{"remainingRequest":"/home/lotus/go_projects/src/tcs/tcs-admin/buefy_project_last/node_modules/babel-loader/lib/index.js!/home/lotus/go_projects/src/tcs/tcs-admin/buefy_project_last/node_modules/eslint-loader/index.js??ref--13-0!/home/lotus/go_projects/src/tcs/tcs-admin/buefy_project_last/src/store/modules/players.js","dependencies":[{"path":"/home/lotus/go_projects/src/tcs/tcs-admin/buefy_project_last/src/store/modules/players.js","mtime":1573741116818},{"path":"/home/lotus/go_projects/src/tcs/tcs-admin/buefy_project_last/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lotus/go_projects/src/tcs/tcs-admin/buefy_project_last/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/lotus/go_projects/src/tcs/tcs-admin/buefy_project_last/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/lotus/go_projects/src/tcs/tcs-admin/buefy_project_last/src/store/modules/players.js"],"names":["ToastProgrammatic","Toast","callFunction","namespaced","state","players","player","total_players","isActive","wallet","newWallet","inventory","getters","mutations","SET_PLAYERS","SET_TOTAL_PLAYERS","SET_WALLET","ADD_INVENTORY","inv","i","concat","SET_INVENTORY","DELETE_INVENTORY","key","splice","SET_PLAYER","actions","getPlayersByPage","page","commit","window","axios","get","response","data","Players","forEach","p","Registered","LastActive","TotalPlayers","updateName","post","Tg","Name","status","open","message","type","getWallet","tg","updateWallet","Credits","Number","Gold","updateLocation","Location","PosX","PosY","updateOxigen","Air","addInventory","itemtype","ItemType","itemvalue","ItemValue","getInventory","Items","deleteInventory","console","log","getPlayer","updateInventory"],"mappings":"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","sourcesContent":["import {ToastProgrammatic as Toast} from \"buefy\";\nimport {callFunction} from \"../../utils/filters.js\"\n\nexport default {\n    namespaced: true,\n    state: {\n        players: [],\n        player: [],\n        total_players: null,\n        isActive: false,\n        wallet: [],\n        newWallet: [],\n        inventory: [],\n    },\n    getters: {\n        players: state => state.players,\n        total_players: state => state.total_players,\n        player: state => state.player,\n        // playerOne(state) {\n        //     return keyword => state.players.filter(player =>{\n        //         return player.Tg == keyword\n        //     });\n        // },\n        wallet: state => state.wallet,\n        inventory: state => state.inventory,\n\n    } ,\n    mutations: {\n        SET_PLAYERS(state, players){\n            state.players = players;\n        },\n        SET_TOTAL_PLAYERS(state, total_players){\n            state.total_players = total_players;\n        },\n        SET_WALLET(state, wallet){\n            state.wallet = wallet;\n        },\n        ADD_INVENTORY(state, inv){\n            if(!state.inventory){\n                state.inventory = [inv];\n            }else {\n                let i = state.inventory.concat(inv)\n                state.inventory = i;\n            }\n        },\n        SET_INVENTORY(state, inventory){\n            state.inventory = inventory;\n        },\n        DELETE_INVENTORY(state, key){\n            state.inventory.splice(key, 1);\n        },\n        SET_PLAYER(state, player){\n            state.player = player;\n        },\n    },\n    actions: {\n//*******************************PLAYER*********************************************\n        async getPlayersByPage({commit}, page){\n            let response =  await window.axios.get('/players?page='+page);\n            // Registered\n            response.data.Players.forEach(p => {\n                p.Registered = callFunction(p.Registered);\n                p.LastActive = callFunction(p.LastActive);\n            });\n            commit('SET_PLAYERS', response.data.Players);\n            commit('SET_TOTAL_PLAYERS', response.data.TotalPlayers);\n        },\n        async updateName({ state }){\n            let response =  await window.axios.post('/player/name',{\n                Tg: state.player.Tg,\n                Name: state.player.Name,\n            });\n            if(response.status == 200 || response.status == 204){\n                Toast.open({\n                    message: 'Name is updated!',\n                    type: 'is-success'\n                });\n            }\n        },\n//*******************************WALLET*********************************************\n        async getWallet({commit}, tg){\n            let response =  await window.axios.get('/player/wallet?id='+tg);\n            commit('SET_WALLET', response.data);\n        },\n        async updateWallet({state}){\n            let response =  await window.axios.post('/player/wallet', {\n                Tg: state.player.Tg,\n                Credits: Number(state.wallet.Credits),\n                Gold: Number(state.wallet.Gold),\n            });\n            if(response.status == 200 || response.status == 204){\n                Toast.open({\n                    message: 'Wallet is updated!',\n                    type: 'is-success'\n                });\n            }\n        },\n        async updateLocation({state}){\n            let response =  await window.axios.post('/player/location/update', {\n                Tg: state.player.Tg,\n                Location: Number(state.player.Location),\n                PosX: Number(state.player.PosX),\n                PosY: Number(state.player.PosY),\n            });\n            if(response.status == 200 || response.status == 204){\n                Toast.open({\n                    message: 'Location is updated!',\n                    type: 'is-success'\n                });\n            }\n        },\n        async updateOxigen({state}){\n            let response =  await window.axios.post('/player/air/update', {\n                Tg: state.player.Tg,\n                Air: Number(state.player.Air),\n            });\n            if(response.status == 200 || response.status == 204){\n                Toast.open({\n                    message: 'Oxigen is updated!',\n                    type: 'is-success'\n                })\n            }\n        },\n//*******************************INVENTORY*********************************************\n        async addInventory({commit}, inventory){\n            let response =  await window.axios.post('/player/inventory/add', {\n                tg: inventory.Tg,\n                itemtype: inventory.ItemType,\n                itemvalue: Number(inventory.ItemValue),\n            });\n            if(response.status == 200 || response.status == 204){\n                // console.log('VUEX')\n                // console.log(inventory)\n                commit('ADD_INVENTORY', inventory);\n            }\n        },\n        async getInventory({commit}, tg){\n            let response =  await window.axios.get('/player/inventory?tg='+tg);\n            commit('SET_INVENTORY', response.data.Items);\n        },\n        async deleteInventory({commit, state}, key){\n            console.log(state.inventory[key].ItemType)\n            let response =  await window.axios.post('/player/inventory/remove', {\n                Tg: state.player.Tg,\n                ItemType: state.inventory[key].ItemType,\n                ItemValue: Number(state.inventory[key].ItemValue),\n            });\n            if(response.status == 200 || response.status == 204){\n                commit('DELETE_INVENTORY', key);\n                Toast.open({\n                    message: 'Inventory is removed!',\n                    type: 'is-danger'\n                })\n            }\n        },\n        async getPlayer({commit}, tg){\n            console.log('player get vuex')\n            let response =  await window.axios.get('/player?id='+tg);\n            // /* eslint-disable no-debugger */\n            // debugger\n            // /* eslint-enable no-debugger */\n\n            if(response.status == 200 || response.status == 204){\n                commit('SET_PLAYER', response.data);\n            }\n            console.log(response.data)\n\n        },\n        async updateInventory({state}, key){\n            console.log('Type' + state.inventory[key].ItemType)\n            console.log('Val' + state.inventory[key].ItemValue)\n            console.log('Tg' + state.player.Tg)\n\n            let response =  await window.axios.post('/player/inventory/update', {\n                Tg: state.player.Tg,\n                ItemType: state.inventory[key].ItemType,\n                ItemValue: state.inventory[key].ItemValue,\n            });\n            if(response.status == 200 || response.status == 204){\n                console.log('updated invent vuex!')\n                Toast.open({\n                    message: 'Inventory is updated!',\n                    type: 'is-success'\n                })\n            }\n        },\n        // async updateInventory(key){\n        //     /player/inventory/update\n        //     console.log('update inventory'+key)\n        // },\n    }\n}\n"]}]}