{"remainingRequest":"/home/lotus/go_projects/src/tcs/tcs-admin/buefy_project_last/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lotus/go_projects/src/tcs/tcs-admin/buefy_project_last/src/views/Norms.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lotus/go_projects/src/tcs/tcs-admin/buefy_project_last/src/views/Norms.vue","mtime":1575640884972},{"path":"/home/lotus/go_projects/src/tcs/tcs-admin/buefy_project_last/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lotus/go_projects/src/tcs/tcs-admin/buefy_project_last/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/lotus/go_projects/src/tcs/tcs-admin/buefy_project_last/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lotus/go_projects/src/tcs/tcs-admin/buefy_project_last/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHsgVmFsaWRhdGlvbk9ic2VydmVyIH0gZnJvbSAndmVlLXZhbGlkYXRlJzsKaW1wb3J0IEJTZWxlY3RXaXRoVmFsaWRhdGlvbiBmcm9tICcuLi9jb21wb25lbnRzL2lucHV0cy9CU2VsZWN0V2l0aFZhbGlkYXRpb24nOwppbXBvcnQgQklucHV0V2l0aFZhbGlkYXRpb24gZnJvbSAnLi4vY29tcG9uZW50cy9pbnB1dHMvQklucHV0V2l0aFZhbGlkYXRpb24nOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ25vcm1zJywKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBWYWxpZGF0aW9uT2JzZXJ2ZXIsCiAgICAgICAgQlNlbGVjdFdpdGhWYWxpZGF0aW9uLAogICAgICAgIEJJbnB1dFdpdGhWYWxpZGF0aW9uLAogICAgfSwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgaXNFbXB0eTogZmFsc2UsCiAgICAgICAgICAgIGlzU3RyaXBlZDogZmFsc2UsCiAgICAgICAgICAgIGlzTmFycm93ZWQ6IGZhbHNlLAogICAgICAgICAgICBpc0hvdmVyYWJsZTogdHJ1ZSwKICAgICAgICAgICAgaXNMb2FkaW5nOiBmYWxzZSwKICAgICAgICAgICAgaGFzTW9iaWxlQ2FyZHM6IHRydWUsCiAgICAgICAgICAgIG5hcnJvd2VkOiB0cnVlLAogICAgICAgICAgICBvcHRpb25zOiB7CiAgICAgICAgICAgICAgICAicmVzb3VyY2VUeXBlIjogWwogICAgICAgICAgICAgICAgICAgIHt0ZXh0OiAnZ2FzJywgdmFsdWU6IDF9LAogICAgICAgICAgICAgICAgICAgIHt0ZXh0OiAnbWV0YWwnLCB2YWx1ZTogMn0sCiAgICAgICAgICAgICAgICAgICAge3RleHQ6ICdvaWwnLCB2YWx1ZTogM30sCiAgICAgICAgICAgICAgICAgICAge3RleHQ6ICdzZW5kJywgdmFsdWU6IDR9LAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2hvdzogZmFsc2UsCiAgICAgICAgICAgIHZpc2libGU6IGZhbHNlLAogICAgICAgICAgICBuZXdOb3JtOiB7CiAgICAgICAgICAgICAgICAnVGcnOiBOdW1iZXIodGhpcy4kcm91dGUucGFyYW1zLnRnKSwKICAgICAgICAgICAgICAgICdSZXNvdXJjZSc6IG51bGwsCiAgICAgICAgICAgICAgICAnRGF0ZSc6IHRoaXMuY2FsbEZ1bmN0aW9uKCksCiAgICAgICAgICAgICAgICAnQW1vdW50JzogbnVsbCwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgb2JqQW1vdW50OiBudWxsLAogICAgICAgICAgICBhbW91bnQ6IG51bGwsCiAgICAgICAgICAgIG9ialJlc291cmNlOiBudWxsLAogICAgICAgIH0KICAgIH0sCiAgICBtb3VudGVkKCkgewogICAgICAgIHRoaXMuZ2V0Tm9ybXMoKTsKICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIC4uLm1hcEdldHRlcnMoIm5vcm1zIiwgWwogICAgICAgICAgICAnbm9ybXMnLAogICAgICAgIF0pLAogICAgfSwKCiAgICBtZXRob2RzOnsKICAgICAgICBnZXROb3JtcygpewogICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnbm9ybXMvZ2V0Tm9ybXMnLCB0aGlzLiRyb3V0ZS5wYXJhbXMudGcpCiAgICAgICAgfSwKICAgICAgICByZW1vdmVOb3JtKGRhdGUpewogICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnbm9ybXMvZGVsZXRlTm9ybScsIGRhdGUpOwogICAgICAgIH0sCiAgICAgICAgdXBkYXRlTm9ybShkYXRlKXsKICAgICAgICAgICAgdGhpcy52aXNpYmxlID0gZGF0ZTsKICAgICAgICAgICAgY29uc29sZS5sb2coJ3VwZGF0ZSBub3JtIScpCiAgICAgICAgfSwKICAgICAgICB1cGRhdGVBbW91bnQgKGUpIHsKICAgICAgICAgICAgdGhpcy5hbW91bnQgPSBlOwogICAgICAgICAgICB0aGlzLm9iakFtb3VudCA9IHsnQW1vdW50JzogZSwgJ0RhdGUnOiB0aGlzLnZpc2libGV9OwogICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ25vcm1zL1VQREFURV9BTU9VTlQnLCB0aGlzLm9iakFtb3VudCkKICAgICAgICB9LAogICAgICAgIHVwZGF0ZVJlc291cmNlIChlKSB7CiAgICAgICAgICAgIHRoaXMub2JqUmVzb3VyY2UgPSB7J1Jlc291cmNlJzogZSwgJ0RhdGUnOiB0aGlzLnZpc2libGV9OwogICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ25vcm1zL1VQREFURV9SRVNPVVJDRScsIHRoaXMub2JqUmVzb3VyY2UpCiAgICAgICAgfSwKICAgICAgICBzYXZlTm9ybShkYXRlKXsKICAgICAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ25vcm1zL3VwZGF0ZU5vcm0nLCBkYXRlKTsKICAgICAgICAgICAgdGhpcy52aXNpYmxlID0gZmFsc2U7CiAgICAgICAgfSwKICAgICAgICBjYW5jZWwobm9ybSwgaW5kZXgpewogICAgICAgICAgICB0aGlzLnZpc2libGUgPSBmYWxzZTsKICAgICAgICAgICAgbGV0IG9iaiA9IHsnaW5kZXgnOiBpbmRleCwgJ25vcm0nOiBub3JtfQogICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnbm9ybXMvZ2V0Tm9ybScsIG9iaikKICAgICAgICB9LAogICAgICAgIGNhbmNlbEFkZE5vcm0oKXsKICAgICAgICAgICAgdGhpcy5zaG93ID0gZmFsc2U7CiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdub3Jtcy9nZXROb3JtJywgdGhpcy4kcm91dGUucGFyYW1zLnRnKTsKICAgICAgICAgICAgdGhpcy5yZXNldCgpOwogICAgICAgIH0sCiAgICAgICAgcmVzZXQoKXsKICAgICAgICAgICAgdGhpcy5uZXdOb3JtLlJlc291cmNlID0gbnVsbDsKICAgICAgICAgICAgdGhpcy5uZXdOb3JtLkRhdGUgPSB0aGlzLmNhbGxGdW5jdGlvbigpOwogICAgICAgICAgICB0aGlzLm5ld05vcm0uQW1vdW50ID0gbnVsbDsKICAgICAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuJHJlZnMub2JzZXJ2ZXIucmVzZXQoKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfSwKICAgICAgICBjYWxsRnVuY3Rpb246IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdmFyIGN1cnJlbnREYXRlV2l0aEZvcm1hdCA9IG5ldyBEYXRlKCkudG9KU09OKCkuc2xpY2UoMCwgMTApLnJlcGxhY2UoLy0vZywgJy0nKTsKICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnREYXRlV2l0aEZvcm1hdAogICAgICAgIH0sCiAgICAgICAgc2F2ZU5ld05vcm0oKXsKICAgICAgICAgICAgbGV0IGNvcGllZE9iamVjdCA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMubmV3Tm9ybSk7CiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdub3Jtcy9hZGROb3JtJywgY29waWVkT2JqZWN0KTsKICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["Norms.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"Norms.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"p-3\">\n        <div class=\"tile is-ancestor\">\n            <div class=\"tile is-3 is-vertical is-parent\">\n            </div>\n            <div class=\"tile is-6 is-vertical is-parent\">\n                <div class=\"tile is-child is-2\">\n                    <b-button @click=\"$router.go(-1)\" type=\"is-info\" >\n                        Back\n                    </b-button>\n                </div>\n\n<!-------------------------------------------------------------------------------------------------------->\n<!--//********************************TABLE*******************************************************-->\n<!-------------------------------------------------------------------------------------------------------->\n                <b-table\n                        :data=\"isEmpty ? [] : norms\"\n                        :striped=\"isStriped\"\n                        :narrowed=\"isNarrowed\"\n                        :hoverable=\"isHoverable\"\n                        :loading=\"isLoading\"\n                        :mobile-cards=\"hasMobileCards\">\n\n                    <template slot-scope=\"props\">\n                        <b-table-column field=\"Tg\" label=\"Tg\" width=\"40\" numeric>\n                            {{props.index+1}}\n                        </b-table-column>\n\n                        <b-table-column field=\"Resource\" label=\"Resource\" width=\"40\" numeric centered>\n                            <span  v-show=\"visible !== props.row.Date\">\n                                {{ options.resourceType[props.row.Resource-1].text }}\n                            </span>\n                            <b-select placeholder=\"Select a resource\"\n                                      :value=\"props.row.Resource\"\n                                      @input=\"updateResource\"\n                                      rounded\n                                      size=\"is-small\"\n                                      v-show=\"visible === props.row.Date\"\n                            >\n                                <option v-for=\"(option, key) in options.resourceType\"\n                                        :key=\"key\"\n                                        :value=\"option.value\"\n                                >\n                                    {{option.text}}\n                                </option>\n                            </b-select>\n                        </b-table-column>\n\n                        <b-table-column field=\"Amount\" label=\"Amount\" centered>\n                            <span  v-show=\"visible !== props.row.Date\">{{ props.row.Amount }}</span>\n                            <b-numberinput :value=\"props.row.Amount\"\n                                           @input=\"updateAmount\"\n                                           size=\"is-small\"\n                                           v-show=\"visible === props.row.Date\"\n                                           id=\"myDIV\"\n                            ></b-numberinput>\n                        </b-table-column>\n\n                        <b-table-column field=\"Date\" label=\"Date\">\n                            {{ props.row.Date | formatDate }}\n                        </b-table-column>\n\n                        <b-table-column field=\"\" label=\"   \">\n                            <b-button @click=\"updateNorm(props.row.Date)\"\n                                      type=\"is-info\"\n                                      v-show=\"visible !== props.row.Date\"\n                                      :disabled=\"visible\"\n                                      size=\"is-small\"\n                                      expanded\n                            >\n                                Update\n                            </b-button>\n                            <b-button @click=\"saveNorm(props.row.Date)\"\n                                      type=\"is-info\"\n                                      v-show=\"visible === props.row.Date\"\n                                      size=\"is-small\"\n                                      expanded\n                            >\n                                Save\n                            </b-button>\n                        </b-table-column>\n\n                        <b-table-column field=\"\" label=\"  \">\n                            <b-button @click=\"removeNorm(props.row.Date)\"\n                                      type=\"is-light\"\n                                      :disabled=\"visible\"\n                                      v-show=\"visible !== props.row.Date\"\n                                      size=\"is-small\"\n                                      expanded\n                            >\n                                Remove\n                            </b-button>\n                            <b-button @click=\"cancel(props.row, props.index)\"\n                                      type=\"is-light\"\n                                      v-show=\"visible === props.row.Date\"\n                                      size=\"is-small\"\n                                      expanded\n                            >\n                                Cancel\n                            </b-button>\n                        </b-table-column>\n                    </template>\n                    <template slot=\"empty\">\n                        <section class=\"section\">\n                            <div class=\"content has-text-grey has-text-centered\">\n                                <p>\n                                    <b-icon\n                                            icon=\"emoticon-sad\"\n                                            size=\"is-large\">\n                                    </b-icon>\n                                </p>\n                                <p>Nothing here.</p>\n                            </div>\n                        </section>\n                    </template>\n                </b-table>\n<!-------------------------------------------------------------------------------------------------------->\n<!--//********************************ADD NORM FORM*******************************************************-->\n<!-------------------------------------------------------------------------------------------------------->\n                <b-button @click=\"show = true\"\n                          type=\"is-primary\"\n                          expanded\n                          v-show=\"!show\"\n                >\n                    Add norm\n                </b-button>\n                <b-button @click=\"cancelAddNorm\"\n                          type=\"is-primary\"\n                          expanded\n                          v-show=\"show\"\n                >\n                    Cancel\n                </b-button>\n                <transition name=\"fade\">\n                    <div class=\"tile is-ancestor\" v-if=\"show\">\n                        <div class=\"tile is-vertical is-parent\">\n                            <div class=\"tile is-child box\">\n                                <ValidationObserver ref=\"observer\">\n                                    <section slot-scope=\"{ validate }\">\n                                        <div class=\"columns is-mobile is-multiline\">\n\n                                            <div class=\"column is-narrow\">\n                                                <BSelectWithValidation rules=\"required\"\n                                                                       label=\"Resource\"\n                                                                       v-model=\"newNorm.Resource\"\n                                                >\n                                                    <option v-for=\"(option, key) in options.resourceType\"\n                                                            :key=\"key\"\n                                                            :value=\"option.value\"\n                                                    >\n                                                        {{option.text}}\n                                                    </option>\n                                                </BSelectWithValidation>\n                                            </div>\n\n                                            <div class=\"column is-narrow\">\n                                                <BInputWithValidation rules=\"required\"\n                                                                      type=\"text\"\n                                                                      label=\"Date\"\n                                                                      v-model=\"newNorm.Date\"\n                                                />\n                                            </div>\n\n                                            <div class=\"column\">\n                                                <label class=\"label\">Amount</label>\n                                                <b-numberinput v-model=\"newNorm.Amount\"\n                                                               rounded\n                                                               size=\"is-small\"\n                                                ></b-numberinput>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"buttons pt-2\">\n                                            <b-button  @click=\"validate().then(saveNewNorm)\" type=\"is-success\">\n                                                Add\n                                            </b-button>\n                                            <b-button @click=\"reset()\" type=\"is-light\">\n                                                Reset\n                                            </b-button>\n                                        </div>\n                                    </section>\n                                </ValidationObserver>\n                            </div>\n                        </div>\n                    </div>\n                </transition>\n            </div>\n            <div class=\"tile is-3 is-vertical is-parent\">\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import { mapGetters } from 'vuex';\n    import { ValidationObserver } from 'vee-validate';\n    import BSelectWithValidation from '../components/inputs/BSelectWithValidation';\n    import BInputWithValidation from '../components/inputs/BInputWithValidation';\n\n    export default {\n        name: 'norms',\n        components: {\n            ValidationObserver,\n            BSelectWithValidation,\n            BInputWithValidation,\n        },\n        data() {\n            return {\n                isEmpty: false,\n                isStriped: false,\n                isNarrowed: false,\n                isHoverable: true,\n                isLoading: false,\n                hasMobileCards: true,\n                narrowed: true,\n                options: {\n                    \"resourceType\": [\n                        {text: 'gas', value: 1},\n                        {text: 'metal', value: 2},\n                        {text: 'oil', value: 3},\n                        {text: 'send', value: 4},\n                    ],\n                },\n                show: false,\n                visible: false,\n                newNorm: {\n                    'Tg': Number(this.$route.params.tg),\n                    'Resource': null,\n                    'Date': this.callFunction(),\n                    'Amount': null,\n                },\n                objAmount: null,\n                amount: null,\n                objResource: null,\n            }\n        },\n        mounted() {\n            this.getNorms();\n        },\n        computed: {\n            ...mapGetters(\"norms\", [\n                'norms',\n            ]),\n        },\n\n        methods:{\n            getNorms(){\n                this.$store.dispatch('norms/getNorms', this.$route.params.tg)\n            },\n            removeNorm(date){\n                this.$store.dispatch('norms/deleteNorm', date);\n            },\n            updateNorm(date){\n                this.visible = date;\n                console.log('update norm!')\n            },\n            updateAmount (e) {\n                this.amount = e;\n                this.objAmount = {'Amount': e, 'Date': this.visible};\n                this.$store.commit('norms/UPDATE_AMOUNT', this.objAmount)\n            },\n            updateResource (e) {\n                this.objResource = {'Resource': e, 'Date': this.visible};\n                this.$store.commit('norms/UPDATE_RESOURCE', this.objResource)\n            },\n            saveNorm(date){\n                this.$store.dispatch('norms/updateNorm', date);\n                this.visible = false;\n            },\n            cancel(norm, index){\n                this.visible = false;\n                let obj = {'index': index, 'norm': norm}\n                this.$store.dispatch('norms/getNorm', obj)\n            },\n            cancelAddNorm(){\n                this.show = false;\n                this.$store.dispatch('norms/getNorm', this.$route.params.tg);\n                this.reset();\n            },\n            reset(){\n                this.newNorm.Resource = null;\n                this.newNorm.Date = this.callFunction();\n                this.newNorm.Amount = null;\n                requestAnimationFrame(() => {\n                    this.$refs.observer.reset();\n                });\n            },\n            callFunction: function () {\n                var currentDateWithFormat = new Date().toJSON().slice(0, 10).replace(/-/g, '-');\n                return currentDateWithFormat\n            },\n            saveNewNorm(){\n                let copiedObject = Object.assign({}, this.newNorm);\n                this.$store.dispatch('norms/addNorm', copiedObject);\n            }\n        }\n    }\n</script>\n\n<style>\n    /*************Transition******************/\n    .fade-enter-active, .fade-leave-active {\n        transition: opacity .3s;\n    }\n    .fade-enter, .fade-leave-to /* .fade-leave-active до версии 2.1.8 */ {\n        opacity: 0;\n    }\n\n</style>\n"]}]}